var doc = app.activeDocument;

// Create a list of paragraph styles
myStyles = app.activeDocument.allParagraphStyles;
var styleArray = [];
for (i = 0; i < myStyles.length; i++) {
	styleArray.push(get_path(myStyles[i], myStyles[i].name));
	if (myStyles[i].parent.constructor.name == "ParagraphStyleGroup") styleArray[i] += " [" + myStyles[i].parent.name + "]";
}

// Make the dialog box for selecting the paragraph styles
var the_dialog = app.dialogs.add({
	name: "First Paragraph Style",
	canCancel: true
});
with(the_dialog.dialogColumns.add()) {
	with(dialogRows.add()) {
		staticTexts.add({
			staticLabel: "Choose first style:"
		});
	}
	with(borderPanels.add()) {
		var first_paragraph = dropdowns.add({
			stringList: styleArray,
			selectedIndex: 0
		});
	}
}
the_dialog.show();

//Paste from clipboard
app.pasteInPlace();

//Find bolds and italics
for (bold = 0; bold < 2; bold++) {
	for (ital = 0; ital < 2; ital++) {
		if (bold + ital) {
			findAttr(bold, ital, "");
		}
	}
}

//Apply first style and next styles
var first_paragraph = app.activeDocument.allParagraphStyles[first_paragraph.selectedIndex];
app.activeDocument.stories.everyItem().paragraphs[0].applyParagraphStyle(first_paragraph);

for (i = 0; i < app.activeDocument.stories.length; i++) {
	myStory = app.activeDocument.stories.item(i); {
		var appliedStyle = myStory.appliedParagraphStyle;
		for (i = 1; i < myStory.paragraphs.length; i++) {
			var nextStyle = appliedStyle.nextStyle;
			myStory.paragraphs[i].appliedParagraphStyle = nextStyle;
		}
	}
}

function get_path(style, style_name) {
	while (style.parent.constructor.name != 'Document')
		return get_path(style.parent, style.parent.name + ' > ' + style_name);
	return style_name;
}


//FIND ITALIC/BOLD AND CREATE CHARACTER STYLES---------------------------------------
function findAttr(bold, italic, StyleName) {
	app.findTextPreferences = NothingEnum.nothing;
	app.changeTextPreferences = NothingEnum.nothing;
	app.findTextPreferences.appliedCharacterStyle = app.activeDocument.characterStyles[0]; // "[None]"

	app.findTextPreferences.fontStyle = "Regular";
	app.findTextPreferences.position = Position.NORMAL;
	app.findTextPreferences.capitalization = Capitalization.NORMAL;
	app.findTextPreferences.underline = false;
	app.findTextPreferences.strikeThru = false;

	if (bold) {
		if (italic)
			app.findTextPreferences.fontStyle = "Bold Italic";
		else
			app.findTextPreferences.fontStyle = "Bold";
	} else {
		if (italic)
			app.findTextPreferences.fontStyle = "Italic";
	}
	foundItems = app.activeDocument.findText();
	if (foundItems.length > 0) {
		if (StyleName == "") {
			if (bold)
				StyleName = "Bold";
			if (italic) {
				if (bold)
					StyleName = "Bold Italic";
				else
					StyleName = "Italic";
			}
			try {
				characterStyle = app.activeDocument.characterStyles.add({
					name: StyleName
				});
				if (bold || italic) characterStyle.fontStyle = app.findTextPreferences.fontStyle;

			} catch (e) {}
		}
		app.changeTextPreferences.appliedCharacterStyle = StyleName;
		app.activeDocument.changeText(false);
	}
}
